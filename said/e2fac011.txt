oxagast asked are you alive with hash e2fac011
<---- snip ---->
/*
 * Copyright 2000-2005 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.intellij.lang.javascript.psi.impl;

import com.intellij.lang.javascript.psi.JSClass;
import com.intellij.lang.javascript.psi.JSParameter;
import com.intellij.lang.javascript.psi.JSVariable;
import com.intellij.psi.PsiElement;
import com.intellij.psi.ResolveResult;
import com.intellij.psi.scope.BaseScopeProcessor;

/**
 * Created by IntelliJ IDEA.
 * User: max
 * Date: Jan 30, 2005
 * Time: 6:39:11 PM
 * To change this template use File | Settings | File Templates.
 */
public class JSClassResolverProcessor extends BaseScopeProcessor
{
	protected JSClass myJsClass;
	protected JSParameter myParameter;
	protected JSVariable myVar;

	public JSClassResolverProcessor(final JSClass jsClass, final JSParameter parameter, final JSVariable var)
	{
		myJsClass = jsClass;
		myParameter = parameter;
		myVar = var;
	}

	public boolean execute(final PsiElement element, final ResolveResult resolveResult)
	{
		if(element instanceof JSClass)
		{
			myJsClass = (JSClass) element;
			return false;
		}
		if(element instanceof JSParameter)
		{
			myParameter = (JSParameter) element;
			return false;
		}
		if(element instanceof JSVariable)
		{
			myVar = (JSVariable) element;
			return false;
		}
		return true;
	}

	public JSClass getJsClass()
	{
		return myJsClass;
	}

	public JSParameter getParameter()
	{
		return myParameter;
	}

	public JSVariable getVar()
	{
		return myVar;
	}
}
